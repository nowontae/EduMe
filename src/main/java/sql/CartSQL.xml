<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.edume.student.cart">
 	<!-- 내 장바구니 목록  -->
 	<select id="myCartList" resultType="com.edume.student.model.CartDTO">
	<!--  select m.midx,m.mname,l.lidx, l.ltitle, l.lsubtitle,l.lthumnail,l.lorignprice
	from cart c, member m, lecture l
	where c.lidx=l.lidx
	and m.midx=c.midx
	and m.midx=#{midx}-->
	select cl.*, ltd.lteacherdiscount, ltd.lteacherstartdiscount, ltd.lteacherenddiscount, lad.ladmindiscount, lad.ladminstartdiscount, lad.ladminenddiscount
	from (select lidx
	    from cart
	    where midx=#{midx}) c,
	    (select *
	     from LECTURETEACHERDISCOUNT ) ltd,
	    (select *
	     from LECTUREADMINDISCOUNT ) lad,
	    ( select m.midx,m.mname,l.lidx, l.ltitle, l.lsubtitle,l.lthumnail,l.lorignprice
		from cart c, member m, lecture l
		where c.lidx=l.lidx
		and m.midx=c.midx
		and m.midx=#{midx} ) cl
	where c.lidx = ltd.lidx and c.lidx=lad.lidx and c.lidx = cl.lidx
	</select>
	
	
	<!-- 장바구니 항목 삭제 -->
	<delete id="myCart_delete" parameterType="Integer">
	delete from cart 
	where midx= #{midx}
	and lidx=#{lidx}
	</delete>
	<!-- 장바구니에 이미 담겼는지 확인 -->
	<select id="myCartList_Check" resultType="Integer">
	select count(*) from cart where midx=#{midx} and lidx=#{lidx}
	</select>
	<!-- 장바구니 담기 -->
	<insert id="addMyCartList" >
	insert into cart values(#{midx},#{lidx})
	</insert>
	
	<!--강의 구매  -->
	<!--1. 구매내역 등록  -->
	<insert id="purchaseLecture" parameterType="Map">
	insert into myLectureList values(#{midx},#{lidx})
	</insert>
	
	<!--2. 결제내역 등록  -->
	<!--2-1. 결제용 정보 추출 -->
	<select id="purchaseLectureInfo" resultType="com.edume.student.model.CartDTO">
	select cl.*, ltd.lteacherdiscount, ltd.lteacherstartdiscount, ltd.lteacherenddiscount, lad.ladmindiscount, lad.ladminstartdiscount, lad.ladminenddiscount
	from 
	    (select *
	     from LECTURETEACHERDISCOUNT
         where lidx=#{lidx} ) ltd,
	    (select *
	     from LECTUREADMINDISCOUNT 
         where lidx=#{lidx}) lad,
	    ( select L.midx,l.lidx, l.ltitle, l.lsubtitle,l.lthumnail,l.lorignprice
		from  lecture l
		where lidx=#{lidx} ) cl
	where cl.lidx = ltd.lidx and cl.lidx=lad.lidx 
	</select>
	
	<!-- 2-2. 결제정보 업데이트 -->
	<insert id="updatePurchase" parameterType="com.edume.student.model.PurchaseDTO">
	insert into purchase values(purchase_idx.nextval, #{midx},#{lidx},#{pprice},#{pteacherincome},#{padminincome}, sysdate)
	</insert>
	
	<select id="searchLectureMidx" resultType="Integer">
	select midx from lecture where lidx=#{lidx}
	</select>
	
	<update id="updateUserCredit" parameterType="Map">
	update member set mcredit = mcredit+#{dto.pteacherincome} where midx=#{teacherMidx}
	</update>
	<!-- 3. 크레딧에 정보 기록 -->
	<insert id="updateCreditHistory" parameterType="Map">
	insert into credit values(credit_idx.nextval, #{teacherMidx}, 1, #{dto.pteacherincome},'강의 판매 금액',sysdate )
	</insert>
	
	<!--3. 장바구니 삭제  -->
	<!--위에 Delete 활용 -->
	<!--  -->
	
 </mapper>